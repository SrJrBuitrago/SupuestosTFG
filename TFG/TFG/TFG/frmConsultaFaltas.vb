'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports ControlsSAP


Public Class frmConsultaFaltas
    
    Private _company As SAPBobsCOM.Company

    Public Sub New()
        MyBase.New()
        ' Llamada necesaria para el Diseñador de Windows Forms.
        Me.InitializeComponent()
        '
        ' Agregue cualquier inicialización después de la llamada a InitializeComponent().
        _company = Addon2Core.Addon.CB1App.Company
    End Sub
    'Método cargador, centra el formulario y pone el foco en el lstEmp, indica de donde tiene que sacar los valores para el lstemp y ejecuta el método cargarGrid()
    Private Sub frmConsultaFaltas_Load(sender As Object, e As EventArgs) Handles Me.Load
        Me.CenterToScreen()
        Me.lstEmp.Company = _company
        Me.lstEmp.Select()
        With lstEmp

            .Company = _company
            .Table = "OSLP"
            .ValueMember = "SlpCode"
            .Condition = "SlpCode >0"
            .DisplayMember = "SlpCode"
            .Columns.AddColumn("Codigo", "SlpCode")
            .Columns.AddColumn("Nombre", "SlpName")


        End With
        cargarGrid()

    End Sub
    'Método que carga las columnas, las opciones y asigna el datatable en el grid. Se ejecuta solo en el load
    Private Sub cargarGrid()
        Dim colCodeFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colNameFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colEmpFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colFechaFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colHoraFalta As DevExpress.XtraGrid.Columns.GridColumn
        Try
            With SapGrid1
                .GridView1.Columns.Clear()
                SapGrid1.MultiSelect = False
                SapGrid1.Editable = False
                colCodeFalta = .Columns.AddColumn("Code", "Code")
                colNameFalta = .Columns.AddColumn("Descripción", "Name")
                colEmpFalta = .Columns.AddColumn("Código Empleado", "U_TFG_CODEEMP")
                colFechaFalta = .Columns.AddColumn("Fecha Falta", "U_TFG_FECHAFALTA")
                colHoraFalta = .Columns.AddColumn("Horas Faltadas", "U_TFG_HORASFALTADAS")

                Dim dt As DataTable
                Dim msql As String
                Using conn As New Addon2Core.DataEngine.CDBConnection
                    msql = "SELECT * FROM [@TFG_FALTASEMPDV] ORDER BY ABS(CODE)"
                    dt = conn.ExecQuery(msql)
                End Using
                .DataSource = dt
            End With
        Catch ex As Exception

        End Try
    End Sub
    'Métod que recibe un string (query que vamos a ejecutar) carga las columnas, las opciones y asigna el datatable en el grid. Se ejecuta solo en el evento del botón buscar
    Private Sub cargarGrid(ByVal msql As String)
        Dim colCodeFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colNameFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colEmpFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colFechaFalta As DevExpress.XtraGrid.Columns.GridColumn
        Dim colHoraFalta As DevExpress.XtraGrid.Columns.GridColumn
        Try
            With SapGrid1
                .GridView1.Columns.Clear()
                SapGrid1.MultiSelect = False
                SapGrid1.Editable = False
                colCodeFalta = .Columns.AddColumn("Code", "Code")
                colNameFalta = .Columns.AddColumn("Descripción", "Name")
                colEmpFalta = .Columns.AddColumn("Código Empleado", "U_TFG_CODEEMP")
                colFechaFalta = .Columns.AddColumn("Fecha Falta", "U_TFG_FECHAFALTA")
                colHoraFalta = .Columns.AddColumn("Horas Faltadas", "U_TFG_HORASFALTADAS")

                Dim dt As DataTable

                Using conn As New Addon2Core.DataEngine.CDBConnection
                    msql = msql + " ORDER BY ABS(CODE)"
                    dt = conn.ExecQuery(msql)
                End Using
                .DataSource = dt
            End With
        Catch ex As Exception

        End Try
    End Sub
    'Método para el evento click del btnBuscar. Quita el dt asignado al sapgrid y si validar devuelve true ejecuta el método creaQuery(msql) y el método cargarGrid(msql)
    Private Sub btnBuscar_Click(sender As Object, e As EventArgs) Handles btnFiltrar.Click
        Dim msql As String
        SapGrid1.DataSource = Nothing
        If validar() Then
            creaQuery(msql)
            cargarGrid(msql)
        End If


    End Sub
    'Método para el evento click del btnAñadir. Abre el frmFaltasEDV en modo alta.
    Private Sub btnAñadir_Click(sender As Object, e As EventArgs) Handles btnAñadir.Click

        Dim frm As New frmFaltasEDV()
        Addon2Core.Addon.CB1App.EmbedIntoSAP(frm)

        frm.Show()
        frm.DoAdd()

       
    End Sub
    'Método para el evento click del btnModificar. Comprueba que el SapGrid tenga 1 fila seleccionada y abre el formulario en el registro del valor de la columna code que hay seleccionada en el sapgrid.
    Private Sub btnModificar_Click(sender As Object, e As EventArgs) Handles btnModificar.Click
        If SapGrid1.SelectedRows.Count = 1 Then
            Dim frm As New frmFaltasEDV()
            Dim cod As String
            cod = SapGrid1.GridView1.GetRowCellValue(SapGrid1.GridView1.FocusedRowHandle, "Code")
            Addon2Core.Addon.CB1App.EmbedIntoSAP(frm)
            frm.Show()
            frm.GoToKey(cod)

        Else : Addon2Core.Addon.CB1App.Application.SetStatusBarMessage("Debe seleccionar una fila")

        End If
    End Sub
    'Función que devuelve true si los campos de fecha tienen ambos valores o si ambos no tienen valor. Si uno tiene valor y el otro no devuelve falso
    Private Function validar() As Boolean
        Dim valida As Boolean = True
        If txtFechaD.HasValue And Not txtFechaH.HasValue Or Not txtFechaD.HasValue And txtFechaH.HasValue Then
            Addon2Core.Addon.CB1App.Application.SetStatusBarMessage("No puedes rellenar solo uno de los dos campos")
            txtFechaD.Select()
            valida = False
        End If
        Return valida
    End Function
    'Método que recibe un string el cual va a modificar en función de si los campos tienen valor o no
    Public Sub creaQuery(ByRef msql As String)
        Dim valida As Boolean = False
        msql = "select Code, Name, U_TFG_CODEEMP, U_TFG_FECHAFALTA, U_TFG_HORASFALTADAS FROM [@TFG_FALTASEMPDV] WHERE "
        If Not valida And lstEmp.HasValue Then
            msql = msql + "U_TFG_CODEEMP =" & ControlsSAP.SQLActions.ToSQL(lstEmp.Value)
            If txtFechaD.HasValue AndAlso txtFechaH.HasValue Then
                msql = msql + "and U_TFG_FECHAFALTA between" & ControlsSAP.SQLActions.ToSQL(CDate(txtFechaD.Value)) & "and" & ControlsSAP.SQLActions.ToSQL(CDate(txtFechaH.Value))
            End If
            valida = True
        End If
        If Not valida And txtFechaD.HasValue AndAlso txtFechaH.HasValue Then
            valida = True
            msql = msql + "U_TFG_FECHAFALTA between" & ControlsSAP.SQLActions.ToSQL(CDate(txtFechaD.Value)) & "and" & ControlsSAP.SQLActions.ToSQL(CDate(txtFechaH.Value))
        End If
        If Not valida And Not lstEmp.HasValue AndAlso Not txtFechaD.HasValue AndAlso Not txtFechaH.HasValue Then
            msql = "select Code, Name, U_TFG_CODEEMP, U_TFG_FECHAFALTA, U_TFG_HORASFALTADAS FROM [@TFG_FALTASEMPDV]"
            valida = True
        End If
    End Sub
End Class
